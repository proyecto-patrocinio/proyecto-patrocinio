name: Continuous Integration for Backend

# triggers for our workflow
on:
  # any code pushed to master and develop branch will also be a trigger
  push:
    branches:
      - main
      - dev


jobs:

  ci: # health check job for testing and code formatting check
    name: Run test
    runs-on: ubuntu-22.04 # os for running the job
    container:
      python:3.11.1-alpine

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          # Make sure the actual branch is checked out when running on pull requests
          ref: ${{ github.head_ref }} 

      - name: Set api environment
        run: |
          set > "com/backend/.envs/.app.dev"

      - name: Install Dependencies
        run: |
          cd com/backend/app/
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: run make migrations
        run: |
          cd ./com/backend/app
          python ./manage.py makemigrations

      - name: run test
        run: |
          cd ./com/backend/app
          export PYTHONDONTWRITEBYTECODE=1
          python ./manage.py test
        env:
          DJANGO_ALLOWED_HOSTS: "localhost 127.0.0.1 0.0.0.0 databaseserver db nginxserver"
          DEBUG: 1
          SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
          EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
          CORS_ALLOWED_ORIGINS: "http://127.0.0.1:3000 http://localhost:3000 http://127.0.0.1:80 http://localhost http://nginxserver"
          HOSTNAME: localhost

  cd:
    runs-on: ubuntu-latest
    needs: ci
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          # Make sure the actual branch is checked out when running on pull requests
          ref: ${{ github.head_ref }} 
      - name: Build and Push
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: proyectopatrocinio/backend-patrocinio
          registry: docker.io
          dockerfile: com/backend/app/Dockerfile.prod
          directory: com/backend/app
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          addLatest: true
