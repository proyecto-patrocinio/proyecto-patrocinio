openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/auth/logout/:
    get:
      operationId: listLogouts
      description: 'Calls Django logout method and delete the Token object

        assigned to the current User object.


        Accepts/Returns nothing.'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
    post:
      operationId: createLogout
      description: 'Calls Django logout method and delete the Token object

        assigned to the current User object.


        Accepts/Returns nothing.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/auth/user/:
    get:
      operationId: retrieveUserDetails
      description: 'Reads and updates UserModel fields

        Accepts GET, PUT, PATCH methods.


        Default accepted fields: username, first_name, last_name

        Default display fields: pk, username, email, first_name, last_name

        Read-only fields: pk, email


        Returns UserModel fields.'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
      tags:
      - api
    put:
      operationId: updateUserDetails
      description: 'Reads and updates UserModel fields

        Accepts GET, PUT, PATCH methods.


        Default accepted fields: username, first_name, last_name

        Default display fields: pk, username, email, first_name, last_name

        Read-only fields: pk, email


        Returns UserModel fields.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetails'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateUserDetails
      description: 'Reads and updates UserModel fields

        Accepts GET, PUT, PATCH methods.


        Default accepted fields: username, first_name, last_name

        Default display fields: pk, username, email, first_name, last_name

        Read-only fields: pk, email


        Returns UserModel fields.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetails'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
      tags:
      - api
  /api/clients/client/:
    get:
      operationId: listClients
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Client'
          description: ''
      tags:
      - api
    post:
      operationId: createClient
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Client'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Client'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: ''
      tags:
      - api
  /api/clients/client/{id}/:
    get:
      operationId: retrieveClient
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this client.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: ''
      tags:
      - api
    put:
      operationId: updateClient
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this client.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Client'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Client'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateClient
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this client.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Client'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Client'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyClient
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this client.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/clients/patrimony/:
    get:
      operationId: listPatrimonys
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Patrimony'
          description: ''
      tags:
      - api
    post:
      operationId: createPatrimony
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patrimony'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Patrimony'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Patrimony'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patrimony'
          description: ''
      tags:
      - api
  /api/clients/patrimony/{id}/:
    get:
      operationId: retrievePatrimony
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this patrimony.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patrimony'
          description: ''
      tags:
      - api
    put:
      operationId: updatePatrimony
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this patrimony.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patrimony'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Patrimony'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Patrimony'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patrimony'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdatePatrimony
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this patrimony.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patrimony'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Patrimony'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Patrimony'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patrimony'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyPatrimony
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this patrimony.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/clients/family/:
    get:
      operationId: listFamilys
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Family'
          description: ''
      tags:
      - api
    post:
      operationId: createFamily
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Family'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Family'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Family'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Family'
          description: ''
      tags:
      - api
  /api/clients/family/{id}/:
    get:
      operationId: retrieveFamily
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this family.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Family'
          description: ''
      tags:
      - api
    put:
      operationId: updateFamily
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this family.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Family'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Family'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Family'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Family'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateFamily
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this family.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Family'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Family'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Family'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Family'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyFamily
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this family.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/clients/son/:
    get:
      operationId: listSons
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Son'
          description: ''
      tags:
      - api
    post:
      operationId: createSon
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Son'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Son'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Son'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Son'
          description: ''
      tags:
      - api
  /api/clients/son/{id}/:
    get:
      operationId: retrieveSon
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this son.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Son'
          description: ''
      tags:
      - api
    put:
      operationId: updateSon
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this son.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Son'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Son'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Son'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Son'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateSon
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this son.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Son'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Son'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Son'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Son'
          description: ''
      tags:
      - api
    delete:
      operationId: destroySon
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this son.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/clients/tel/:
    get:
      operationId: listTels
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tel'
          description: ''
      tags:
      - api
    post:
      operationId: createTel
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tel'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tel'
          description: ''
      tags:
      - api
  /api/clients/tel/{id}/:
    get:
      operationId: retrieveTel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this tel.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tel'
          description: ''
      tags:
      - api
    put:
      operationId: updateTel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this tel.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tel'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tel'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateTel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this tel.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tel'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tel'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyTel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this tel.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/panels/Panel/:
    get:
      operationId: listPanels
      description: List all panels with the number of associated cards.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Panel'
          description: ''
      tags:
      - api
    post:
      operationId: createPanel
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Panel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Panel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Panel'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Panel'
          description: ''
      tags:
      - api
  /api/panels/Panel/{id}/:
    get:
      operationId: retrievePanel
      description: Retrieve a specific panel and its associated cards.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this panel.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Panel'
          description: ''
      tags:
      - api
    put:
      operationId: updatePanel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this panel.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Panel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Panel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Panel'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Panel'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdatePanel
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this panel.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Panel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Panel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Panel'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Panel'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyPanel
      description: Delete a panel if it has no associated cards; otherwise, return
        an error.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this panel.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/geography/locality/:
    get:
      operationId: listLocalitys
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocalityOne'
          description: ''
      tags:
      - api
    post:
      operationId: createLocality
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocalityOne'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LocalityOne'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LocalityOne'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalityOne'
          description: ''
      tags:
      - api
  /api/geography/locality/{id}/:
    get:
      operationId: retrieveLocality
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this locality.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalityFull'
          description: ''
      tags:
      - api
    put:
      operationId: updateLocality
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this locality.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocalityFull'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LocalityFull'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LocalityFull'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalityFull'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateLocality
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this locality.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocalityFull'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LocalityFull'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LocalityFull'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalityFull'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyLocality
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this locality.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/geography/province/:
    get:
      operationId: listProvinces
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProvinceOne'
          description: ''
      tags:
      - api
    post:
      operationId: createProvince
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvinceOne'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProvinceOne'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProvinceOne'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvinceOne'
          description: ''
      tags:
      - api
  /api/geography/province/{id}/:
    get:
      operationId: retrieveProvince
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this province.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvinceFull'
          description: ''
      tags:
      - api
    put:
      operationId: updateProvince
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this province.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvinceFull'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProvinceFull'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProvinceFull'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvinceFull'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateProvince
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this province.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvinceFull'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProvinceFull'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProvinceFull'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvinceFull'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyProvince
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this province.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/geography/nationality/:
    get:
      operationId: listNationalitys
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NationalityOne'
          description: ''
      tags:
      - api
    post:
      operationId: createNationality
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NationalityOne'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NationalityOne'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NationalityOne'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NationalityOne'
          description: ''
      tags:
      - api
  /api/geography/nationality/{id}/:
    get:
      operationId: retrieveNationality
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this nationality.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NationalityFull'
          description: ''
      tags:
      - api
    put:
      operationId: updateNationality
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this nationality.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NationalityFull'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NationalityFull'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NationalityFull'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NationalityFull'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateNationality
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this nationality.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NationalityFull'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NationalityFull'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NationalityFull'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NationalityFull'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyNationality
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this nationality.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/cards/Card/:
    get:
      operationId: listCards
      description: API endpoint that allows CRUD operations on Card objects.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Card'
          description: ''
      tags:
      - api
    post:
      operationId: createCard
      description: 'Custom create view that uses a different serializer for card creation.


        Overrides the default serializer class to use CardCreateSerializer for creating
        cards.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Card'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Card'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Card'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
          description: ''
      tags:
      - api
  /api/cards/Card/{consultation}/:
    get:
      operationId: retrieveCard
      description: API endpoint that allows CRUD operations on Card objects.
      parameters:
      - name: consultation
        in: path
        required: true
        description: A unique value identifying this card.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
          description: ''
      tags:
      - api
    put:
      operationId: updateCard
      description: API endpoint that allows CRUD operations on Card objects.
      parameters:
      - name: consultation
        in: path
        required: true
        description: A unique value identifying this card.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Card'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Card'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Card'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateCard
      description: API endpoint that allows CRUD operations on Card objects.
      parameters:
      - name: consultation
        in: path
        required: true
        description: A unique value identifying this card.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Card'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Card'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Card'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyCard
      description: API endpoint that allows CRUD operations on Card objects.
      parameters:
      - name: consultation
        in: path
        required: true
        description: A unique value identifying this card.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/boardUser/boardUser/:
    get:
      operationId: listBoardUsers
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BoardUser'
          description: ''
      tags:
      - api
    post:
      operationId: createBoardUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BoardUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BoardUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BoardUser'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoardUser'
          description: ''
      tags:
      - api
  /api/boardUser/boardUser/{id}/:
    get:
      operationId: retrieveBoardUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this board user.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoardUser'
          description: ''
      tags:
      - api
    put:
      operationId: updateBoardUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this board user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BoardUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BoardUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BoardUser'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoardUser'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateBoardUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this board user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BoardUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BoardUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BoardUser'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoardUser'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyBoardUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this board user.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/boards/board/:
    get:
      operationId: listBoards
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Board'
          description: ''
      tags:
      - api
    post:
      operationId: createBoard
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Board'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Board'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Board'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Board'
          description: ''
      tags:
      - api
  /api/boards/board/consultancy_board/:
    get:
      operationId: consultancyBoardBoard
      description: Custom action to retrieve consultancy data for boards.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Board'
          description: ''
      tags:
      - api
  /api/boards/board/{id}/:
    get:
      operationId: retrieveBoard
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this board.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Board'
          description: ''
      tags:
      - api
    put:
      operationId: updateBoard
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this board.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Board'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Board'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Board'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Board'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateBoard
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this board.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Board'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Board'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Board'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Board'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyBoard
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this board.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/consultations/consultation/:
    get:
      operationId: listConsultations
      description: 'Custom list view that handles filtering based on the ''availability_state''
        query parameter.


        If ''availability_state'' parameter is present in the request''s GET parameters,
        it filters

        the queryset to include consultations based on the specified state(s) using
        AND or OR.

        Then, it calls the parent class''s list method to handle standard listing.'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Consultation'
          description: ''
      tags:
      - api
    post:
      operationId: createConsultation
      description: Custom create view that uses the ConsultationCreateSerializer.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Consultation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Consultation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Consultation'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Consultation'
          description: ''
      tags:
      - api
  /api/consultations/consultation/logs/:
    get:
      operationId: logsConsultation
      description: 'Retrieve consultations that started N days ago.


        Requires ''days'' parameter in the query string specifying the number of days.'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Consultation'
          description: ''
      tags:
      - api
  /api/consultations/consultation/{id}/:
    get:
      operationId: retrieveConsultation
      description: API endpoint that allows CRUD operations on Consultation objects.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this consultation.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Consultation'
          description: ''
      tags:
      - api
    put:
      operationId: updateConsultation
      description: API endpoint that allows CRUD operations on Consultation objects.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this consultation.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Consultation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Consultation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Consultation'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Consultation'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateConsultation
      description: API endpoint that allows CRUD operations on Consultation objects.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this consultation.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Consultation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Consultation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Consultation'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Consultation'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyConsultation
      description: API endpoint that allows CRUD operations on Consultation objects.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this consultation.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/consultations/request_consultation/:
    get:
      operationId: listRequestConsultations
      description: 'Custom list view that handles special group-board filtering.


        If ''group_by'' parameter is in the request''s GET parameters, it performs

        filtering based on the group-board query parameter. If ''group_by'' is set

        to ''board'', it returns a dictionary grouping requests by destiny board.

        Otherwise, it calls the parent class''s list method to handle standard listing.'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RequestConsultation'
          description: ''
      tags:
      - api
    post:
      operationId: createRequestConsultation
      description: 'Create a new Consultation and set its availability_state to "PENDING"
        if it meets the conditions.


        This method handles the creation of a new Consultation instance, updating
        its availability_state to "PENDING"

        if it''s eligible. It performs checks to ensure that the Consultation doesn''t
        already exist

        or have pending requests.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestConsultation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequestConsultation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RequestConsultation'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestConsultation'
          description: ''
      tags:
      - api
  /api/consultations/request_consultation/{id}/:
    get:
      operationId: retrieveRequestConsultation
      description: API endpoint that allows CRUD operations on RequestConsultation
        objects.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this RequestConsultation.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestConsultation'
          description: ''
      tags:
      - api
    put:
      operationId: updateRequestConsultation
      description: API endpoint that allows CRUD operations on RequestConsultation
        objects.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this RequestConsultation.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestConsultation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequestConsultation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RequestConsultation'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestConsultation'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateRequestConsultation
      description: API endpoint that allows CRUD operations on RequestConsultation
        objects.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this RequestConsultation.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestConsultation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequestConsultation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RequestConsultation'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestConsultation'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyRequestConsultation
      description: 'Delete a Consultation and update its availability_state to "CREATED".


        This method handles the deletion of a Consultation instance and,

        updates its availability_state to "CREATED" to indicate the cancellation of
        the request.'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this RequestConsultation.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/comments/comment/:
    get:
      operationId: listComments
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
          description: ''
      tags:
      - api
    post:
      operationId: createComment
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
      tags:
      - api
  /api/comments/comment/{id}/:
    get:
      operationId: retrieveComment
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this comment.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
      tags:
      - api
    put:
      operationId: updateComment
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this comment.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateComment
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this comment.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyComment
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this comment.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/comments/file/:
    get:
      operationId: listFiles
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileGet'
          description: ''
      tags:
      - api
    post:
      operationId: createFile
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileGet'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FileGet'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileGet'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileGet'
          description: ''
      tags:
      - api
  /api/comments/file/{id}/:
    get:
      operationId: retrieveFile
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this file.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileGet'
          description: ''
      tags:
      - api
    put:
      operationId: updateFile
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this file.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileGet'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FileGet'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileGet'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileGet'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateFile
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this file.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileGet'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FileGet'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileGet'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileGet'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyFile
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this file.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/comments/file/{id}/download/:
    get:
      operationId: downloadFile
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this file.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileGet'
          description: ''
      tags:
      - api
  /api/auth/user-by-token/:
    get:
      operationId: listget_user_info_from_tokens
      description: 'View to retrieve user information based on a provided authentication
        token.


        This view requires a valid authentication token and will return information
        about the authenticated user.'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/terms/:
    get:
      operationId: listget_file_contents
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/terms/download/:
    get:
      operationId: listdownload_file_contents
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/register/:
    post:
      operationId: createRegister
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Register'
          description: ''
      tags:
      - api
  /api/auth/password/reset/:
    post:
      operationId: createPasswordReset
      description: 'Calls Django Auth PasswordResetForm save method.


        Accepts the following POST parameters: email

        Returns the success/fail message.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordReset'
          description: ''
      tags:
      - api
  /api/auth/password/reset/confirm/:
    post:
      operationId: createPasswordResetConfirm
      description: "Password reset e-mail link is confirmed, therefore\nthis resets\
        \ the user's password.\n\nAccepts the following POST parameters: token, uid,\n\
        \    new_password1, new_password2\nReturns the success/fail message."
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
      tags:
      - api
  /api/auth/login/:
    post:
      operationId: createLogin
      description: 'Check the credentials and return the REST Token

        if the credentials are valid and authenticated.

        Calls Django Auth login method to register User ID

        in Django session framework


        Accept the following POST parameters: username, password

        Return the REST Framework Token Object''s key.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
      tags:
      - api
  /api/auth/password/change/:
    post:
      operationId: createPasswordChange
      description: 'Calls Django Auth SetPasswordForm save method.


        Accepts the following POST parameters: new_password1, new_password2

        Returns the success/fail message.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordChange'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordChange'
          description: ''
      tags:
      - api
  /api/auth/verify-email/:
    post:
      operationId: createVerifyEmail
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyEmail'
          description: ''
      tags:
      - api
  /api/auth/confirm-email/:
    post:
      operationId: createVerifyEmail
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyEmail'
          description: ''
      tags:
      - api
  /api/auth/account-confirm-email/{key}/:
    post:
      operationId: createVerifyEmail
      description: ''
      parameters:
      - name: key
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyEmail'
          description: ''
      tags:
      - api
  /api/auth/resend-email/:
    post:
      operationId: createEmailAddress
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendEmailVerification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResendEmailVerification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResendEmailVerification'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResendEmailVerification'
          description: ''
      tags:
      - api
  /api/auth/password/reset-confirm/{uidb64}/{token}/:
    post:
      operationId: createPasswordResetConfirm
      description: "Password reset e-mail link is confirmed, therefore\nthis resets\
        \ the user's password.\n\nAccepts the following POST parameters: token, uid,\n\
        \    new_password1, new_password2\nReturns the success/fail message."
      parameters:
      - name: uidb64
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: token
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
      tags:
      - api
  /api/consultations/request_consultation/{id}/accepted/:
    post:
      operationId: acceptedRequestConsultation
      description: API endpoint that allows CRUD operations on RequestConsultation
        objects.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this RequestConsultation.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestConsultation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequestConsultation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RequestConsultation'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestConsultation'
          description: ''
      tags:
      - api
  /api/consultations/request_consultation/{id}/rejected/:
    post:
      operationId: rejectedRequestConsultation
      description: API endpoint that allows CRUD operations on RequestConsultation
        objects.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this RequestConsultation.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestConsultation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequestConsultation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RequestConsultation'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestConsultation'
          description: ''
      tags:
      - api
  /api/panels/Panel/{id}/force-destroy/:
    delete:
      operationId: forceDestroyPanel
      description: Forcefully delete a panel, even if it has cards assigned.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this panel.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
components:
  schemas:
    UserDetails:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 150
        email:
          type: string
          format: email
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - username
    Client:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        id_type:
          enum:
          - DOCUMENT
          - PASSPORT
          type: string
        id_value:
          type: string
          maxLength: 20
        sex:
          enum:
          - MALE
          - FEMALE
          type: string
        birth_date:
          type: string
          format: date
        address:
          type: string
          maxLength: 100
        postal:
          type: integer
        marital_status:
          enum:
          - SINGLE
          - MARRIED
          - DIVORCED
          - WIDOWER
          type: string
        housing_type:
          enum:
          - HOUSE
          - DEPARTMENT
          - TRAILER
          - STREET_SITUATION
          type: string
        studies:
          enum:
          - INCOMPLETE_PRIMARY
          - COMPLETE_PRIMARY
          - INCOMPLETE_SECONDARY
          - COMPLETE_SECONDARY
          - INCOMPLETE_TERTIARY
          - COMPLETE_TERTIARY
          - INCOMPLETE_UNIVERSITY
          - COMPLETE_UNIVERSITY
          type: string
        email:
          type: string
          format: email
          maxLength: 254
        locality:
          type: string
      required:
      - first_name
      - last_name
      - id_type
      - id_value
      - birth_date
      - address
      - postal
      - marital_status
      - housing_type
      - studies
      - email
      - locality
    Patrimony:
      type: object
      properties:
        id:
          type: integer
        employment:
          type: string
          maxLength: 45
        salary:
          type: integer
        other_income:
          type: string
          maxLength: 45
        amount_other_income:
          type: integer
        amount_retirement:
          type: integer
        amount_pension:
          type: integer
        vehicle:
          type: string
          maxLength: 125
      required:
      - id
      - employment
      - other_income
      - vehicle
    Family:
      type: object
      properties:
        id:
          type: integer
        partner_salary:
          type: integer
      required:
      - id
      - partner_salary
    Son:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        id_type:
          enum:
          - DOCUMENT
          - PASSPORT
          type: string
        sex:
          enum:
          - MALE
          - FEMALE
          type: string
        birth_date:
          type: string
          format: date
        address:
          type: string
          maxLength: 100
        id_value:
          type: string
          maxLength: 20
        locality:
          type: string
        family_client_user:
          type: string
      required:
      - first_name
      - last_name
      - id_type
      - birth_date
      - address
      - id_value
      - locality
      - family_client_user
    Tel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        phone_number:
          type: string
          maxLength: 20
        client:
          type: integer
      required:
      - phone_number
      - client
    Panel:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        id:
          type: integer
          readOnly: true
        board:
          type: integer
      required:
      - title
      - board
    LocalityOne:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          maxLength: 100
        province:
          type: string
      required:
      - id
      - name
      - province
    LocalityFull:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          maxLength: 100
        province:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
              maxLength: 100
            nationality:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                  maxLength: 100
              required:
              - id
              - name
              readOnly: true
          required:
          - id
          - name
          readOnly: true
      required:
      - id
      - name
    ProvinceOne:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          maxLength: 100
        nationality:
          type: string
      required:
      - id
      - name
      - nationality
    ProvinceFull:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          maxLength: 100
        localities:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
                maxLength: 100
              province:
                type: string
            required:
            - id
            - name
            - province
          readOnly: true
      required:
      - id
      - name
    NationalityOne:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          maxLength: 100
      required:
      - id
      - name
    NationalityFull:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          maxLength: 100
        provinces:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
                maxLength: 100
              nationality:
                type: string
            required:
            - id
            - name
            - nationality
          readOnly: true
      required:
      - id
      - name
    Card:
      type: object
      properties:
        consultation:
          type: string
          readOnly: true
        tag:
          type: string
          maxLength: 256
        panel:
          type: integer
      required:
      - tag
      - panel
    BoardUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
        board:
          type: integer
      required:
      - user
      - board
    Board:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 45
      required:
      - title
    Consultation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        availability_state:
          enum:
          - CREATED
          - PENDING
          - ASSIGNED
          - REJECTED
          - ARCHIVED
          type: string
        progress_state:
          enum:
          - TODO
          - IN_PROGRESS
          - DONE
          - PAUSED
          - BLOCKED
          - INCOMPLETE
          type: string
        time_stamp:
          type: string
          format: date-time
          readOnly: true
        description:
          type: string
        opponent:
          type: string
          maxLength: 500
        tag:
          type: string
          maxLength: 30
        client:
          type: integer
      required:
      - opponent
      - tag
      - client
    RequestConsultation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        response_time:
          type: string
          format: date-time
          nullable: true
        consultation:
          type: integer
        destiny_board:
          type: integer
      required:
      - consultation
      - destiny_board
    Comment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        time_stamp:
          type: string
          format: date-time
          readOnly: true
        text:
          type: string
        consultation:
          type: integer
        user:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            username:
              type: string
              description: Required. 150 characters or fewer. Letters, digits and
                @/./+/-/_ only.
              pattern: ^[\w.@+-]+\z
              maxLength: 150
          required:
          - username
        files:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              time_stamp:
                type: string
                format: date-time
                readOnly: true
              filename:
                type: string
                maxLength: 255
              comment:
                type: integer
            required:
            - filename
            - comment
          nullable: true
      required:
      - text
      - consultation
      - user
    FileGet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        time_stamp:
          type: string
          format: date-time
          readOnly: true
        filename:
          type: string
          maxLength: 255
        comment:
          type: integer
      required:
      - filename
      - comment
    Register:
      type: object
      properties:
        username:
          type: string
          maxLength: 150
          minLength: 1
        email:
          type: string
          format: email
        password1:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
      required:
      - username
      - email
      - password1
      - password2
    PasswordReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PasswordResetConfirm:
      type: object
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
        uid:
          type: string
        token:
          type: string
      required:
      - new_password1
      - new_password2
      - uid
      - token
    Login:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - password
    PasswordChange:
      type: object
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
      required:
      - new_password1
      - new_password2
    VerifyEmail:
      type: object
      properties:
        key:
          type: string
          writeOnly: true
      required:
      - key
    ResendEmailVerification:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
